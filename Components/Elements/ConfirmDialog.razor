@typeparam TItem

@if (IsVisible)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@Title</h5>
                    <button type="button" class="btn-close" @onclick="Close" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>@Message</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="Close">Cancel</button>
                    <button class="btn btn-danger" @onclick="ConfirmDelete">Delete</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public string Title { get; set; } = "Confirm Delete";
    [Parameter] public string Message { get; set; } = "Are you sure you want to delete this item?";
    [Parameter] public EventCallback<TItem> OnConfirm { get; set; }

    private TItem? _itemToDelete;

    public bool IsVisible { get; set; }

    public void Show(TItem item)
    {
        _itemToDelete = item;
        IsVisible = true;
        StateHasChanged();
    }

    private void Close()
    {
        IsVisible = false;
        StateHasChanged();
    }

    private async Task ConfirmDelete()
    {
        if (_itemToDelete != null)
        {
            await OnConfirm.InvokeAsync(_itemToDelete);
        }
        IsVisible = false;
    }
}
