@using System.Security.Claims
@rendermode InteractiveServer

@inject IJSRuntime JSRuntime

<nav class="navbar fixed-top navbar-expand-lg navbar-dark bg-dark shadow-sm">
    <div class="container-fluid d-flex align-items-center">
        <!-- Bottone Offcanvas -->
        <div class="navbar-left">
            <button class="navbar-toggler d-block me-2" type="button"
                    data-bs-toggle="offcanvas"
                    data-bs-target="#offcanvasWithBackdrop"
                    aria-controls="offcanvasWithBackdrop"
                    aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <!-- Spazio tra bottone e titolo -->
            <div class="me-2"></div>

            <!-- Titolo -->
            <NavLink class="navbar-brand fw-bold text-light" href="/">TaskManager</NavLink>
        </div>
        
        <!-- Login -->
        <div class="ms-auto">
            @if (User?.Identity?.IsAuthenticated == true)
            {
                <div class="link-item">
                    Hello @Username!
                </div>
            }
        </div>
    </div>
</nav>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    private ClaimsPrincipal? User;

    private string Username = "";

    protected override async Task OnInitializedAsync()
    {
        if (authenticationState is not null)
        {
            var state = await authenticationState;

            User = state.User;

            Username = state?.User?.Identity?.Name ?? string.Empty;
        }
    }

}


